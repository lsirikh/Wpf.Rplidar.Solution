<UserControl x:Class="Wpf.Rplidar.Solution.Views.VisualView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wpf.Rplidar.Solution.Views"
			 xmlns:utils="clr-namespace:Wpf.Rplidar.Solution.Utils"
			 xmlns:cal="http://www.caliburnproject.org"
			 xmlns:control="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
			 xmlns:innerCon="clr-namespace:Wpf.Rplidar.Solution.Controls"
             mc:Ignorable="d"
			 d:Width="1200"
			 d:Height="800"
			 d:Background="Gray"
             >
	<UserControl.Resources>
		<utils:OffsetConverter x:Key="OffsetConverter"/>
		<utils:HalfValueConverter x:Key="HalfValueConverter"/>
		<utils:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

		<Style TargetType="TextBlock" x:Key="TextBlockStyle" BasedOn="{StaticResource MaterialDesignTextBlock}">
			<Setter Property="FontSize" Value="15" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBox" x:Key="TextBoxStyle" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" >
			<Setter Property="FontSize" Value="15" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextAlignment" Value="Center"/>
		</Style>
		<Style TargetType="ComboBox" x:Key="ComboBoxStyle" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
			<Setter Property="FontSize" Value="15" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="Button" x:Key="ButtonStyle" BasedOn="{StaticResource MaterialDesignFlatAccentBgButton}">

			<Setter Property="Margin" Value="5"/>
		</Style>
	</UserControl.Resources>

	<Grid x:Name="VisualGrid">

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="300"
							  MinWidth="100"
							  MaxWidth="350"
						   />

		</Grid.ColumnDefinitions>
		<Grid Grid.Column="0">
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="50"/>
			</Grid.RowDefinitions>
			<ScrollViewer
			Width="Auto" Height="Auto"
			x:Name="scroller"
			CanContentScroll="True"
			VerticalScrollBarVisibility="Visible"
			HorizontalScrollBarVisibility="Visible"
			cal:Message.Attach="[Event PreviewMouseWheel] = [Action scroller_MouseWheel($source, $eventArgs)];
			[Event PreviewMouseDown] = [Action scroller_MouseDown($source, $eventArgs)];
			[Event PreviewMouseUp] = [Action scroller_MouseUp($source, $eventArgs)]; 
			[Event PreviewMouseMove] = [Action scroller_MouseMove($source, $eventArgs)];
			"
			>

				<control:ZoomAndPanControl ContentScale="{Binding ContentScale}" ContentOffsetX="{Binding ContentOffsetX}" ContentOffsetY="{Binding ContentOffsetY}"
								   x:Name="ZoomAndPanControl"   Background="#44000000">
					<Border BorderThickness="2" BorderBrush="Black" Background="White">

						<innerCon:DrawingCanvas Width="{Binding Width}" Height="{Binding Height}" x:Name="canvas" Points="{Binding Points}" 
												SnapsToDevicePixels="True"
												cal:Message.Attach="[Event MouseMove] = [Action canvas_MouseMove($source, $eventArgs)];
																	[Event MouseLeave] = [Action canvas_MouseLeave($source, $eventArgs)];"
											>


							<WrapPanel Width="{Binding Width}" Height="{Binding Height}">
								<WrapPanel.Resources>
									<DrawingBrush x:Key="GridBrush" TileMode="Tile" Viewport="0,0,4,4" ViewportUnits="Absolute" Stretch="None">
										<DrawingBrush.Drawing>
											<GeometryDrawing>
												<GeometryDrawing.Geometry>
													<GeometryGroup>
														<RectangleGeometry Rect="0,0,4,4" />
														<LineGeometry StartPoint="0,4" EndPoint="4,4" />
														<LineGeometry StartPoint="4,0" EndPoint="4,4" />
													</GeometryGroup>
												</GeometryDrawing.Geometry>
												<GeometryDrawing.Pen>
													<Pen Brush="DimGray" Thickness="1" />
												</GeometryDrawing.Pen>
											</GeometryDrawing>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</WrapPanel.Resources>
								<WrapPanel.Background>
									<StaticResource ResourceKey="GridBrush" />
								</WrapPanel.Background>
							</WrapPanel>
							<Ellipse Width="10" Height="10" 
								 StrokeThickness="2"
								 Stroke="Red"
								 Fill="Red"
							     
								 >
								<Ellipse.RenderTransform>
									<TranslateTransform X="{Binding RelativeSource={RelativeSource AncestorType=Canvas}, Path=ActualWidth, Converter={StaticResource HalfValueConverter}, ConverterParameter=5}"
											Y="{Binding RelativeSource={RelativeSource AncestorType=Canvas}, Path=ActualHeight, Converter={StaticResource HalfValueConverter}, ConverterParameter=5}"/>
								</Ellipse.RenderTransform>
							</Ellipse>
							<ItemsControl ItemsSource="{Binding Ellipses}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<Canvas IsItemsHost="True"/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemContainerStyle>
									<Style TargetType="ContentPresenter">
										<Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										<Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
									</Style>
								</ItemsControl.ItemContainerStyle>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Ellipse Width="{Binding EllipseWidth}" Height="{Binding EllipseHeight}" Fill="Blue" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<Polyline Points="{Binding BoundaryPoints, UpdateSourceTrigger=PropertyChanged}"
								  Stroke="Blue"
								  StrokeThickness="2"
								  Fill="#220000FF"
								  x:Name="relativeScreen"
								  cal:Message.Attach="[Event MouseMove] = [Action relativeScreen_MouseMove($source, $eventArgs)];
													[Event MouseLeave] = [Action relativeScreen_MouseLeave($source, $eventArgs)];"
								  />
						</innerCon:DrawingCanvas>
					</Border>
				</control:ZoomAndPanControl>
			</ScrollViewer>
			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Button Grid.Column="0"
						x:Name="ClickToSetHighPosition"
						IsEnabled="{Binding SensorLocation, Converter={StaticResource InvertBooleanConverter}}"
						Style="{StaticResource ButtonStyle}"
						Background="Bisque"
						Content="Top Location"/>
				<Button Grid.Column="1"
						x:Name="ClickToSetLowPosition"
						Background="Bisque"
						IsEnabled="{Binding SensorLocation}"
						Style="{StaticResource ButtonStyle}"
						Content="Bottom Location"/>
				<Button Grid.Column="2"
						x:Name="ClickToSetBoundary"
						Style="{StaticResource ButtonStyle}"
						Content="Set Boundary"/>
				<Button Grid.Column="3"
						x:Name="ClickToClearBoundary"
						Style="{StaticResource ButtonStyle}"
						Content="Clear Boundary"/>
			</Grid>
		</Grid>
		<GridSplitter Grid.Column="1"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Stretch"
                      ResizeBehavior="PreviousAndNext"
                      Background="DimGray"
                      Width="4" />

		<ScrollViewer Height="{Binding Path=ActualHeight, ElementName=VisualGrid}"
					  Grid.Column="2">

			<StackPanel Orientation="Vertical">
				<Border BorderThickness="4" BorderBrush="#66BEFF"
					Margin="0 0 0 10">
					<TextBlock Text="Properties" 
						   FontSize="20"
						   Margin="5"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Center"
						   FontWeight="Bold" />
				</Border>
				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Zoom"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding Scale, Mode=OneWay }"/>
					<TextBlock Grid.Column="2"
					   Text="%"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
						   Text="X Offset"
						   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding XOffset, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>
				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Y Offset"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
					 Style="{StaticResource TextBoxStyle}"
					 Text="{Binding YOffset, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>
				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Offset Angle"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
					 Style="{StaticResource TextBoxStyle}"
					 Text="{Binding OffsetAngle, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="°"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>
				
				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Width"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
					 Style="{StaticResource TextBoxStyle}"
					 Text="{Binding Width, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>
				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Height"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
					 Style="{StaticResource TextBoxStyle}"
					 Text="{Binding Height, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Content Width"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding ContentOffsetX, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Content Height"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding ContentOffsetY, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Current X"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding CurrentX, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Current Y"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding CurrentY, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Relative X"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding RelativeX, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Relative Y"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding RelativeY, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Relative Width"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding RelativeWidth, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="40"/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.Column="0"
					   Text="Relative Height"
					   Style="{StaticResource TextBlockStyle}"/>
					<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding RelativeHeight, UpdateSourceTrigger=LostFocus}"/>
					<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
				</Grid>

				<!--<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="120"/>
					<ColumnDefinition Width="100"/>
					<ColumnDefinition Width="40"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0"
					   Text="Target Width"
					   Style="{StaticResource TextBlockStyle}"/>
				<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding TargetWidth, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
				<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
			</Grid>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="120"/>
					<ColumnDefinition Width="100"/>
					<ColumnDefinition Width="40"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0"
					   Text="Target Height"
					   Style="{StaticResource TextBlockStyle}"/>
				<TextBox Grid.Column="1"
						 IsReadOnly="True"
						 Style="{StaticResource TextBoxStyle}"
						 Text="{Binding TargetHeight, Mode=OneWay, UpdateSourceTrigger=LostFocus}"/>
				<TextBlock Grid.Column="2"
					   Text="cm"
					   Style="{StaticResource TextBlockStyle}"/>
			</Grid>-->


			</StackPanel>
		</ScrollViewer>
	</Grid>
</UserControl>
